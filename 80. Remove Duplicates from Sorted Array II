Method : 1
T/S : O(n)/O(1)

class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length==0){
            return 0;
        }
        
        int i=0, j=1, k=1, count=1;
        while(j<nums.length){
            if(nums[i]==nums[j] && count<2){
                nums[k++]=nums[j++];
                count++;
            }else if(nums[i]!=nums[j]){
                i=j;
                nums[k++]=nums[j++];
                count=1;
            }else{
                j++;
            }
        }
        
        return k;
    }
}

Method : 2

Sliding window with modification

class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length<3) return nums.length;
        int start=2;
        for(int end=2;end<nums.length;end++){
            if(nums[end]!=nums[start-2]){
                nums[start++]=nums[end];
            }
        }
        return start;
    }
}
