

//Idea is to add element in subarray at the index of 0 or as regular at the end of the array. Either use one flag to check for level or use 
//result size for alternative check..

class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        Queue<TreeNode> queue= new LinkedList<TreeNode>();
        List<List<Integer>> res = new ArrayList<List<Integer>>();
        
        if(root == null){
            return res;
        }
        
        queue.offer(root);
        
        while(!queue.isEmpty()){
            List<Integer> subRes = new ArrayList<>();
            int level = queue.size();
            for(int index=0;index<level;index++){
                TreeNode node = queue.poll();
                if(res.size() % 2 == 0){
                    subRes.add(node.val);
                }else{
                    subRes.add(0, node.val);
                }
                
                if(node.left != null){
                    queue.offer(node.left);
                }
                if(node.right != null){
                    queue.offer(node.right);
                }
            }
            res.add(subRes);
        }

        return res;
    }
}
