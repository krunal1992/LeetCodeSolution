// T/S : O(N)/O(N)
//Using hashmap to track duplicate number

class Solution {
    public boolean containsDuplicate(int[] nums) {
        Set<Integer> map = new HashSet<Integer>();
        
        for(int index=0;index<nums.length;index++){
            if(map.contains(nums[index])){
                return true;
            }else{
                map.add(nums[index]);
            }
        }
        
        return false;
    }
}


// T/S : O(NlogN)/O(1)
// Sort the array and check for adjucent elements for duplicate

class Solution {
    public boolean containsDuplicate(int[] nums) {
        Arrays.sort(nums);
    for(int i = 0; i < nums.length-1; i++)
    {
        if(nums[i] == nums[i+1])
            return true;
    }
    return false;
    }
}

