//Naive approach. - T/S - O(N)/O(N)
//Efficient approach. - T/S - 
//Use stack to track the parentheses and remove from stack if found close brackets.




class Solution {
    public boolean isValid(String s) {
        ArrayList<Character> stack=new ArrayList<Character>();
        int top=-1;
        if(s==""){
            return false;
        }
            
        for(int i=0;i<s.length();i++){
            if(s.charAt(i) == '(' || s.charAt(i) == '{' || s.charAt(i) == '['){
                stack.add(s.charAt(i));
                top++;
            }else if(top>=0 && ((s.charAt(i) == ')' && stack.get(top) == '(') || (s.charAt(i) == '}' && stack.get(top) == '{') || (s.charAt(i) == ']' && stack.get(top) == '['))){
                stack.remove(top--);
            }else{
                return false;
            }
        }
        
        if(top<0){
            return true;
        }else{
            return false;
        }
    }
}
